Traceback (most recent call last):
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/john/anaconda3/envs/bcd/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Create a lambda expression to filter the data
cond_benign = lambda x: x['cancer'] == False
cond_malignant = lambda x: x['cancer'] == True

# Obtain the mean_pixel_values for each pathology
benign_pixels_averages = x.get_data(x='mean_pixel_value', condition=cond_benign)
malignant_pixels_averages = x.get_data(x='mean_pixel_value', condition=cond_malignant)

benign_mean = np.mean(benign_pixels_averages)
benign_std = np.std(benign_pixels_averages)
malignant_mean = np.mean(malignant_pixels_averages)
malignant_std = np.std(malignant_pixels_averages)

# Conduct a Student's T-Test
t, pvalue = x.test_centrality(a=benign_pixels_averages, b=malignant_pixels_averages, alternative='less')
df = len(benign_pixels_averages) + len(malignant_pixels_averages) - 2

glue("benign_mean", benign_mean)
glue("benign_std", benign_std)
glue("malignant_mean", malignant_mean)
glue("malignant_std", malignant_std)
glue("t_statistic", t)
glue("pvalue", pvalue)
glue("degrees_of_freedom", df)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[8], line 9[0m
[1;32m      6[0m benign_pixels_averages [38;5;241m=[39m x[38;5;241m.[39mget_data(x[38;5;241m=[39m[38;5;124m'[39m[38;5;124mmean_pixel_value[39m[38;5;124m'[39m, condition[38;5;241m=[39mcond_benign)
[1;32m      7[0m malignant_pixels_averages [38;5;241m=[39m x[38;5;241m.[39mget_data(x[38;5;241m=[39m[38;5;124m'[39m[38;5;124mmean_pixel_value[39m[38;5;124m'[39m, condition[38;5;241m=[39mcond_malignant)
[0;32m----> 9[0m benign_mean [38;5;241m=[39m [43mnp[49m[38;5;241m.[39mmean(benign_pixels_averages)
[1;32m     10[0m benign_std [38;5;241m=[39m np[38;5;241m.[39mstd(benign_pixels_averages)
[1;32m     11[0m malignant_mean [38;5;241m=[39m np[38;5;241m.[39mmean(malignant_pixels_averages)

[0;31mNameError[0m: name 'np' is not defined
NameError: name 'np' is not defined

